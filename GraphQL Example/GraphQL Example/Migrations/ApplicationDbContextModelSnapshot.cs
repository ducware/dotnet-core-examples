// <auto-generated />
using GraphQL_Example.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GraphQL_Example.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("graphql")
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GraphQL_Example.Data.Entities.Cake", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Cakes", "graphql");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Description #111",
                            Name = "Cake #1",
                            Price = 100m
                        },
                        new
                        {
                            Id = 2,
                            Description = "Description #222",
                            Name = "Cake #2",
                            Price = 200m
                        },
                        new
                        {
                            Id = 3,
                            Description = "Description #333",
                            Name = "Cake #3",
                            Price = 300m
                        },
                        new
                        {
                            Id = 4,
                            Description = "Description #444",
                            Name = "Cake #4",
                            Price = 400m
                        },
                        new
                        {
                            Id = 5,
                            Description = "Description #555",
                            Name = "Cake #5",
                            Price = 500m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
